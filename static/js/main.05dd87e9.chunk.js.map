{"version":3,"sources":["useCounties.js","useGermany.js","InzidenzTag.js","GermanyDescription.js","AlertDate.js","helpers.js","CountyTable.js","Chart.js","assets/bat.jpg","useJokeOfTheDay.js","JokeOfTheDay.js","Bar.js","App.js","index.js"],"names":["url","countyCodes","params","URLSearchParams","window","location","search","has","get","split","map","c","parseInt","trim","filter","reduce","acc","curr","replace","getUrl","lastUpdatedRegex","vaccinatedRegex","firstTimesVacciantedRegex","latestVaccinedDayRegex","addPadding","text","boxes","day","Number","month","InizidenzTag","inzidenz","style","fontSize","color","toFixed","toString","GermanyDescription","germany","newCases","firstTimeVaccinated","totalVaccinated","percentVaccinated","firstTimeVaccinatedPercent","column","size","bordered","Item","paddingLeft","label","textAlign","AlertDate","date","type","addDecimalPoint","n","String","reverse","s","i","join","parseDate","d","addTime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","insertAt","length","stringToInsert","index","substr","CountyTable","data","counties","key","id","sort","a","b","columns","title","render","row","includes","name","dataIndex","cases","deaths","pagination","showHeader","dataSource","Chart","useState","countiesHistory","setCountiesHistory","countiesChartData","setCountiesChartData","useEffect","axios","then","mapToChartData","slice","history","lastUpdated","closable","message","description","align","justify","className","onChange","selectedHistory","defaultValue","Object","entries","Option","value","ResponsiveContainer","height","LineChart","margin","top","YAxis","hide","domain","XAxis","dataKey","padding","left","right","ReferenceDot","strokeWidth","strokeDasharray","stroke","r","y","x","Line","dot","isAnimationActive","position","offset","indicator","LoadingOutlined","tip","useJokeOfTheDay","joke","setJoke","fetchJoke","res","JokeOfTheDay","reloadJoke","onClick","icon","ReloadOutlined","fontWeight","Date","marginTop","width","src","bat","alt","Bar","useLocation","to","disabled","pathname","HomeOutlined","LineChartOutlined","SmileOutlined","redirectToV2","href","App","setCounties","fetchCounties","start","now","mappedData","features","feature","attributes","AdmUnitId","GEN","last_update","cases7_per_100k","BEZ","state","BL","fakeDelay","setTimeout","useCounties","reloadCounties","setGermany","fetchGermany","casesHtml","root","parse","querySelector","textContent","lastUpdatedUgly","exec","vaccinatedHtml","latestVaccinedDay","useGermany","reloadGermany","basename","exact","path","marginBottom","loading","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05dd87e9.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nfunction getUrl() {\n  let countyCodes = [9362, 9562, 9162, 9564, 9179, 9372,14713, 9278, 9663, 11007];\n\n  // County codes can also be passed as query params in the url\n  const params = new URLSearchParams(window.location.search);\n\n  if (params.has('q')) {\n    countyCodes = params\n      .get('q')\n      .split(',')\n      .map(c => parseInt(c.trim()));\n  }\n\n  const filter = countyCodes\n    .reduce((acc, curr) => (acc += `admunitid=${curr} OR `), '')\n    .replace(/ OR $/, ''); // Strip off trailing ' OR '\n\n  const url = `https://services7.arcgis.com/mOBPykOjAyBO2ZKk/arcgis/rest/services/RKI_Landkreisdaten/FeatureServer/0/query?where=${filter}&outFields=GEN,BEZ,cases,deaths,last_update,cases7_per_100k,AdmUnitId&returnGeometry=false&f=json`;\n\n  return url;\n}\n\nconst url = getUrl();\n\nexport function useCounties() {\n  const [counties, setCounties] = useState(null);\n\n  useEffect(() => fetchCounties(), []);\n\n  const fetchCounties = async () => {\n    setCounties(null);\n    const start = Date.now();\n    const { data } = await axios(url);\n\n    const mappedData = data.features.map(feature => ({\n      id: feature.attributes.AdmUnitId,\n      name: feature.attributes.GEN,\n      lastUpdated: feature.attributes.last_update,\n      inzidenz: feature.attributes.cases7_per_100k,\n      type: feature.attributes.BEZ,\n      state: feature.attributes.BL,\n      cases: feature.attributes.cases,\n      deaths: feature.attributes.deaths,\n    }));\n\n    const fakeDelay = 400 - (Date.now() - start);\n\n    setTimeout(() => setCounties(mappedData), fakeDelay);\n  };\n\n  return [counties, fetchCounties];\n}\n","import axios from 'axios';\nimport { parse } from 'node-html-parser';\nimport { useEffect, useState } from 'react';\nconst impfdashboardUrl =\n  'https://europe-west3-node02-307615.cloudfunctions.net/func-1?url=https://impfdashboard.de';\nconst rkiUrl = `https://europe-west3-node02-307615.cloudfunctions.net/func-1?url=https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Fallzahlen.html`;\n\nconst newCasesSelector =\n  '#main > div.text > table > tbody > tr:nth-child(17) > td:nth-child(3) > strong';\nconst inzidenzSelector = '#main > div.text > table > tbody > tr:nth-child(17) > td:nth-child(5)';\nconst lastUpdatedSelector = '#main > div.text > p:nth-child(4)';\nconst lastUpdatedRegex = /Stand: \\D*\\s?(\\d.*) \\(onlin/;\n\nconst vaccinatedTextSelector = '.text-summary';\nconst vaccinatedRegex = /Damit sind nun (.*) Personen \\((.*%) der Gesamt/;\nconst firstTimesVacciantedRegex = /Insgesamt haben mindestens (.*) Personen \\((.*%.?)\\) eine/;\nconst latestVaccinedDayRegex = /(Am .* wurden in Deutschland .* Im)/;\n\nfunction addPadding(text) {\n  const boxes = text.split('.');\n  const day = Number(boxes[0]) < 10 ? '0' + boxes[0] : boxes[0];\n  const month = Number(boxes[1]) < 10 ? '0' + boxes[1] : boxes[1];\n\n  return `${day}.${month}.${boxes[2]}`;\n}\n\nexport function useGermany() {\n  const [germany, setGermany] = useState(null);\n\n  useEffect(() => fetchGermany(), []);\n\n  const fetchGermany = async () => {\n    setGermany(null);\n\n    const { data: casesHtml } = await axios(rkiUrl);\n    let root = parse(casesHtml);\n\n    const newCases = root.querySelector(newCasesSelector).textContent.replace(',', '.');\n    const inzidenz = +root.querySelector(inzidenzSelector).textContent.replace(',', '.');\n\n    const lastUpdatedUgly = root.querySelector(lastUpdatedSelector).textContent;\n    const lastUpdated = addPadding(lastUpdatedRegex.exec(lastUpdatedUgly)[1]);\n\n    const { data: vaccinatedHtml } = await axios(impfdashboardUrl);\n    root = parse(vaccinatedHtml);\n\n    const text = root\n      .querySelector(vaccinatedTextSelector)\n      .textContent.replace(/(\\n|\\r)/g, '')\n      .replace(/\\s\\s/g, ' ');\n    let [, totalVaccinated, percentVaccinated] = vaccinatedRegex.exec(text);\n    totalVaccinated = totalVaccinated.replace('mindestens', '').trim();\n    percentVaccinated = percentVaccinated.replace(' ', '');\n    let [, firstTimeVaccinated, firstTimeVaccinatedPercent] = firstTimesVacciantedRegex.exec(text);\n    firstTimeVaccinatedPercent = firstTimeVaccinatedPercent.replace(' ', '');\n\n    const [, latestVaccinedDay] = latestVaccinedDayRegex.exec(text);\n\n    setGermany({\n      newCases,\n      firstTimeVaccinated,\n      latestVaccinedDay,\n      firstTimeVaccinatedPercent,\n      inzidenz,\n      lastUpdated,\n      totalVaccinated,\n      percentVaccinated,\n    });\n  };\n\n  return [germany, fetchGermany];\n}\n","import { Tag } from 'antd';\n\nconst InizidenzTag = ({ inzidenz }) => {\n  return (\n    <Tag\n      style={{ fontSize: '13px' }}\n      color={\n        inzidenz < 45 ? 'green' : inzidenz < 75 ? 'orange' : inzidenz < 125 ? 'volcano' : 'red'\n      }\n    >\n      {inzidenz.toFixed(2).toString().replace('.', ',')}\n    </Tag>\n  );\n};\n\nexport default InizidenzTag;\n","import { Descriptions } from 'antd';\nimport InizidenzTag from './InzidenzTag';\n\nconst GermanyDescription = ({ germany }) => {\n  const {\n    newCases,\n    inzidenz,\n    firstTimeVaccinated,\n    totalVaccinated,\n    percentVaccinated,\n    firstTimeVaccinatedPercent,\n  } = germany;\n\n  return (\n    <Descriptions column={1} size=\"small\" bordered>\n      <Descriptions.Item style={{ paddingLeft: '7px' }} label=\"Neuinfektionen\">\n        <div style={{ textAlign: 'center' }}>{newCases}</div>\n      </Descriptions.Item>\n      <Descriptions.Item style={{ paddingLeft: '7px' }} label=\"Inzidenz\">\n        <div style={{ textAlign: 'center' }}>\n          <InizidenzTag inzidenz={inzidenz} />\n        </div>\n      </Descriptions.Item>\n      <Descriptions.Item label=\"Erstgeimpfte\" style={{ paddingLeft: '7px' }}>\n        <div style={{ textAlign: 'center' }}>\n          {firstTimeVaccinated} ({firstTimeVaccinatedPercent})\n        </div>\n      </Descriptions.Item>\n      <Descriptions.Item label=\"Vollst. Geimpfte\" style={{ paddingLeft: '7px' }}>\n        <div style={{ textAlign: 'center' }}>\n          {totalVaccinated} ({percentVaccinated})\n        </div>\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default GermanyDescription;\n","import Text from 'antd/lib/typography/Text';\n\nconst AlertDate = ({ date }) => {\n  return <Text type=\"secondary\">Stand: {date}</Text>;\n};\n\nexport default AlertDate;\n","// 29181 -> \"29.181\"\n// am i overthinking the fuck out of this??\nexport function addDecimalPoint(n) {\n  const t = String(n);\n\n  return t\n    .split('')\n    .reverse()\n    .map((s, i) => {\n      if ((i + 1) % 3 === 0) {\n        return '.' + s;\n      }\n\n      return s;\n    })\n    .reverse()\n    .join('')\n    .replace(/^\\./, '');\n}\n\n/**\n * @example\n * getWeekday(0) // 'Son'\n * getWeekday(1) // 'Mon'\n * getWeekday(1, false) // 'Montag'\n */\nexport function getWeekday(ds, short = true) {\n  const weekdaysShort = ['So.', 'Mo.', 'Di.', 'Mi.', 'Do.', 'Fr.', 'Sa.'];\n  const weekdaysLong = [\n    'Sonntag',\n    'Montag',\n    'Dienstag',\n    'Mittwoch',\n    'Donnerstag',\n    'Freitag',\n    'Samstag',\n  ];\n  const date = new Date();\n\n  date.setDate(Number(ds.slice(0, 2)));\n  date.setMonth(Number(ds.slice(3, 5)) - 1);\n  date.setFullYear(new Date().getFullYear());\n\n  if (short) {\n    return weekdaysShort[date.getDay()];\n  }\n\n  return weekdaysLong[date.getDay()];\n}\n\nexport function getCountyName(county) {\n  let name = county.name;\n\n  if (county.type.includes('Landkreis')) {\n    name += ' (LK)';\n  }\n\n  return name;\n}\n\nexport function parseDate(d, addTime = true) {\n  return addPadding(\n    `${d.getDate()}.${d.getMonth() + 1}.${d.getFullYear()}` +\n      (addTime ? ` ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}` : ''),\n    addTime,\n  );\n}\n\nfunction addPadding(s, addTime = true) {\n  if (s[2] !== '.') {\n    s = insertAt(s, '0', 0);\n  }\n  if (s[5] !== '.') {\n    s = insertAt(s, '0', 3);\n  }\n\n  if (addTime) {\n    if (s[13] !== ':') {\n      s = insertAt(s, '0', 11);\n    }\n    if (s[16] !== ':') {\n      s = insertAt(s, '0', 14);\n    }\n    if (s.length < 19) {\n      s = insertAt(s, '0', 17);\n    }\n  }\n\n  return s;\n}\n\nfunction insertAt(s, stringToInsert, index) {\n  return s.substr(0, index) + stringToInsert + s.substr(index);\n}\n","import { Table } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport { addDecimalPoint } from './helpers';\nimport InizidenzTag from './InzidenzTag';\n\nconst CountyTable = ({ counties }) => {\n  const data = counties.map(c => ({ ...c, key: c.id })).sort((a, b) => a.inzidenz - b.inzidenz);\n\n  const columns = [\n    {\n      title: 'Name',\n      key: 'name',\n      render: row =>\n        row.type.includes('kreis') ? (\n          <span>\n            {row.name}\n            <Text type=\"secondary\"> (LK)</Text>\n          </span>\n        ) : (\n          row.name\n        ),\n    },\n    {\n      title: 'Inzidenz',\n      dataIndex: 'inzidenz',\n      key: 'inzidenz',\n      render: i => <InizidenzTag inzidenz={i} />,\n    },\n    {\n      title: 'Fälle insges.',\n      dataIndex: 'cases',\n      key: 'cases',\n      render: cases => addDecimalPoint(cases),\n    },\n    {\n      title: 'Tote insges.',\n      dataIndex: 'deaths',\n      key: 'deaths',\n      render: deaths => addDecimalPoint(deaths),\n    },\n  ];\n\n  return (\n    <Table size=\"small\" pagination={false} showHeader={true} dataSource={data} columns={columns} />\n  );\n};\n\nexport default CountyTable;\n","import { LoadingOutlined } from '@ant-design/icons';\nimport { Alert, Row, Select, Spin } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { XAxis, ResponsiveContainer, LineChart, Line, YAxis, ReferenceDot } from 'recharts';\n\nconst countiesHistoryUrl = 'https://valid-alpha-268602.ew.r.appspot.com/counties';\n\nconst Chart = () => {\n  const [countiesHistory, setCountiesHistory] = useState(null);\n  const [countiesChartData, setCountiesChartData] = useState(null);\n\n  useEffect(() => {\n    axios(countiesHistoryUrl).then(({ data }) => {\n      setCountiesHistory(data);\n      setCountiesChartData(mapToChartData(data['9362']).slice(-9));\n    });\n  }, []);\n\n  const handleCountySelect = id => {\n    const selectedHistory = countiesHistory[id];\n    setCountiesChartData(mapToChartData(selectedHistory).slice(-9));\n  };\n\n  const mapToChartData = history => {\n    return history.map(c => ({\n      ...c,\n      newCases: Number(c.newCases?.replace('.', '')),\n      inzidenz: c.inzidenz.toFixed(0),\n      lastUpdated: c.lastUpdated.replace('.2021, 00:00 Uhr', ''),\n    }));\n  };\n\n  return (\n    <>\n      <Alert\n        closable\n        message=\"Wo ist die Deutschland-Historie?\"\n        description=\"\n        Das RKI aktualisiert die Corona Kennzahlen für ganz Deutschland seit Juli 2021 nur noch von\n        Mo - Fr. Eine Deutschland-Historie mit täglichen Fallzahlen ist daher, ohne erhöhten\n        Programmieraufwand meinerseits, aktuell nicht möglich. Sobald die dritte Welle anrollt und\n        das RKI die Fallzahlen wieder täglich meldet, kommt auch die Deutschland-Historie zurück 😉\"\n      ></Alert>\n      <br />\n      {countiesChartData && (\n        <Row align=\"middle\" justify=\"space-between\">\n          <h4 className=\"m-0\">\n            Städte & Landkreise <Text type=\"secondary\">(Inzidenz)</Text>\n          </h4>\n          <Select size=\"small\" onChange={handleCountySelect} defaultValue={'9362'}>\n            {Object.entries(countiesHistory).map(([a, b]) => (\n              <Select.Option key={a} value={a}>\n                {b[0].name} {b[0].type.includes('kreis') ? '(LK)' : ''}\n              </Select.Option>\n            ))}\n          </Select>\n        </Row>\n      )}\n      {countiesChartData ? (\n        <ResponsiveContainer height={290}>\n          <LineChart margin={{ top: 10 }} data={countiesChartData}>\n            <YAxis hide fontSize={11} domain={['dataMin - 60', 'dataMax + 100']} />\n            <XAxis fontSize={11} dataKey=\"lastUpdated\" padding={{ left: 20, right: 20 }} />\n            {countiesChartData.length === 9 && (\n              <ReferenceDot\n                strokeWidth={2}\n                strokeDasharray=\"3 3\"\n                stroke=\"#7f8c8d\"\n                r={27}\n                y={countiesChartData[1].inzidenz}\n                x={countiesChartData[1].lastUpdated}\n              />\n            )}\n            <Line\n              strokeWidth={2}\n              dot={{ strokeWidth: 2, r: 4 }}\n              stroke=\"#7f8c8d\"\n              isAnimationActive={false}\n              label={{ fontSize: 11, position: 'top', offset: 10 }}\n              name=\"Inzidenz\"\n              dataKey=\"inzidenz\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      ) : (\n        <Row className=\"mt-20\" justify=\"center\">\n          <Spin indicator={<LoadingOutlined />} tip=\"Lade Historie\" />\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Chart;\n","export default __webpack_public_path__ + \"static/media/bat.823dd11b.jpg\";","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst jokeUrl = 'https://valid-alpha-268602.ew.r.appspot.com/joke-of-the-day';\n\nconst useJokeOfTheDay = () => {\n  const [joke, setJoke] = useState(null);\n\n  const fetchJoke = () => {\n    setJoke(null);\n    axios(jokeUrl).then(res => setJoke(res.data));\n  };\n\n  useEffect(() => fetchJoke(), []);\n\n  return [joke, fetchJoke];\n};\n\nexport default useJokeOfTheDay;\n","import { LoadingOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { Alert, Button, Row, Spin } from 'antd';\nimport { parseDate } from './helpers';\nimport bat from './assets/bat.jpg';\nimport useJokeOfTheDay from './useJokeOfTheDay';\n\nconst JokeOfTheDay = () => {\n  const [joke, reloadJoke] = useJokeOfTheDay();\n  return (\n    <>\n      <Alert\n        closable\n        message=\"Mir gehen die Witze aus!\"\n        description=\"Kennen Sie englische oder deutsche COVID-19 Witze? Schicken Sie sie gerne per Mail an oscar.rosner@web.de\"\n      ></Alert>\n      <Row align=\"middle\" className=\"mt-2\" justify=\"space-between\">\n        <h2 style={{ margin: 0 }}>Joke of the day</h2>\n        <Button onClick={reloadJoke} icon={<ReloadOutlined />} size=\"small\">\n          Aktualisieren\n        </Button>\n      </Row>\n      <h3 style={{ color: 'gray', fontWeight: 400 }}>{parseDate(new Date(), false)}</h3>\n      {joke ? (\n        joke\n      ) : (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin indicator={<LoadingOutlined />} tip=\"Lade Daten\" />\n        </div>\n      )}\n\n      <Row justify=\"center\">\n        <img width=\"230px\" src={bat} alt=\"A Bat\" />\n      </Row>\n    </>\n  );\n};\n\nexport default JokeOfTheDay;\n","import { HomeOutlined, LineChartOutlined, SmileOutlined } from '@ant-design/icons';\nimport { Button, Row } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Bar = () => {\n  const location = useLocation();\n\n  return (\n    <Row justify=\"space-between\" className=\"mt-2 mb-2\">\n      <Link to=\"/\">\n        <Button\n          disabled={location.pathname === '/'}\n          type=\"link\"\n          size=\"small\"\n          icon={<HomeOutlined />}\n        >\n          Home\n        </Button>\n      </Link>\n      <Link to=\"/history\">\n        <Button\n          disabled={location.pathname === '/history'}\n          type=\"link\"\n          size=\"small\"\n          icon={<LineChartOutlined />}\n        >\n          Historie\n        </Button>\n      </Link>\n      <Link to=\"/joke-of-the-day\">\n        <Button\n          disabled={location.pathname === '/joke-of-the-day'}\n          type=\"link\"\n          size=\"small\"\n          icon={<SmileOutlined />}\n        >\n          Joke of the Day\n        </Button>\n      </Link>\n    </Row>\n  );\n};\n\nexport default Bar;\n","import { Alert, Button, Row, Spin } from 'antd';\nimport { LoadingOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { useCounties } from './useCounties';\nimport { useGermany } from './useGermany';\nimport GermanyDescription from './GermanyDescription';\nimport AlertDate from './AlertDate';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport CountyTable from './CountyTable';\nimport Chart from './Chart';\nimport JokeOfTheDay from './JokeOfTheDay';\nimport Bar from './Bar';\n\nfunction redirectToV2() {\n  window.location.href = 'https://kexplx.github.io/covid';\n}\n\nfunction App() {\n  const [counties, reloadCounties] = useCounties();\n  const [germany, reloadGermany] = useGermany();\n\n  return (\n    <div className=\"container\">\n      <Alert\n        closable\n        type=\"error\"\n        description={\n          <>\n            <h2>Neue Version verfügbar!</h2>\n            Pünktlich zur vierten Welle haben wir eine neue Version dieser App entwickelt, mit\n            diesen Features:\n            <ul>\n              <li>Hospitalisierungsinzidenz</li>\n              <li>Top 10 Landkreise (7T Inzidenz)</li>\n              <li>Kennzahlen für Bayern und Deutschland an 7 Tagen die Woche</li>\n              <li>8-Tage Deutschland Historie</li>\n              <li>Kleineres Bundle (ca. 150 KB weniger zu downloaden) </li>\n            </ul>\n            <p>\n              Außerdem haben wir unser Backend vollständig überarbeitet, wodurch die Ladeprobleme,\n              die in der ersten Version häufig auftraten, behoben wurden.\n            </p>\n            <Button onClick={redirectToV2} type=\"primary\">\n              Hier klicken\n            </Button>{' '}\n            oder via URL:\n            <strong> https://kexplx.github.io/covid</strong>\n          </>\n        }\n      ></Alert>\n      <Router basename=\"/inzidenz\">\n        <Bar />\n        <Route exact path=\"/\">\n          <Row\n            className=\"mt-1\"\n            align=\"bottom\"\n            style={{ marginBottom: '8px' }}\n            justify=\"space-between\"\n          >\n            {germany === null ? <span></span> : <AlertDate date={germany.lastUpdated} />}\n            <Button\n              size=\"small\"\n              loading={germany === null}\n              icon={<ReloadOutlined />}\n              onClick={reloadGermany}\n            >\n              Deutschland\n            </Button>\n          </Row>\n          {germany === null ? (\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\n              <Spin indicator={<LoadingOutlined />} tip=\"Lade Daten\" />\n            </div>\n          ) : (\n            <GermanyDescription germany={germany} />\n          )}\n          <Row\n            className=\"mt-2\"\n            align=\"bottom\"\n            style={{ marginBottom: '8px' }}\n            justify=\"space-between\"\n          >\n            {counties === null ? <span></span> : <AlertDate date={counties[0].lastUpdated} />}\n            <Button\n              size=\"small\"\n              loading={counties === null}\n              icon={<ReloadOutlined />}\n              onClick={reloadCounties}\n            >\n              Städte & Landkreise\n            </Button>\n          </Row>\n          {counties === null ? (\n            <div style={{ textAlign: 'center', marginTop: '100px' }}>\n              <Spin indicator={<LoadingOutlined />} tip=\"Lade Daten\" />\n            </div>\n          ) : (\n            <CountyTable counties={counties} />\n          )}\n        </Route>\n        <Route path=\"/history\" component={Chart} />\n        <Route path=\"/joke-of-the-day\" component={JokeOfTheDay} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}